package Search1;

import java.util.ArrayList;

public class WorldMap {
    private int[][] map;
    private int[][] coords;
    private double[][] distances;
    private char[] points = new char[] {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'};

    public WorldMap(int n) {
        switch (n) {
            case 1:
                map = new int[][] {
                        {0, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                        {5, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                        {5, 5, 0, 5, 5, 10, 10, 10, 10, 5, 10, 5, 10, 10, 10 },
                        {10, 10, 5, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                        {10, 10, 5, 10, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10 },
                        {10, 10, 10, 10, 5, 0, 5, 5, 10, 10, 10, 10, 10, 10, 10 },
                        {10, 10, 10, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10 },
                        {10, 10, 10, 10, 10, 5, 10, 0, 5, 5, 5, 10, 10, 10, 10 },
                        {10, 10, 10, 10, 10, 10, 10, 5, 0, 5, 10, 10, 10, 10, 10 },
                        {10, 10, 5, 10, 10, 10, 10, 5, 5, 0, 10, 5, 5, 10, 10 },
                        {10, 10, 10, 10, 10, 10, 5, 5, 10, 10, 0, 10, 10, 5, 10 },
                        {10, 10, 5, 10, 10, 10, 10, 10, 10, 5, 10, 0, 10, 10, 5 },
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0, 5, 10 },
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 5, 8, 10 },
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0 }
                };
                coords = new int[][] {
                        {0,2},
                        {2,0},
                        {4,3},
                        {7,0},
                        {2,4},
                        {0,6},
                        {0,9},
                        {2,7},
                        {5,8},
                        {5,5},
                        {2,9},
                        {7,4},
                        {8,7},
                        {9,9},
                        {9,4}
                };
                break;
            case 2:
                map = new int[][] {
                        {0, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 5, 0, 5, 5, 10, 10, 10, 10, 5, 10, 5, 10, 10, 10},
                        {10, 10, 5, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 8, 5, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 10, 0, 5, 5, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 0, 5, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 10, 10, 10, 5, 5, 0, 10, 5, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 5, 5, 10, 10, 0, 10, 10, 5, 10},
                        {10, 10, 5, 10, 10, 10, 10, 10, 10, 5, 10, 0, 10, 10, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 5, 0, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0}
                };
                coords = new int[][] {
                        {0,2},
                        {2,0},
                        {4,3},
                        {7,0},
                        {2,4},
                        {0,6},
                        {0,9},
                        {2,7},
                        {5,8},
                        {5,5},
                        {2,9},
                        {7,4},
                        {8,7},
                        {9,9},
                        {9,4}
                };
                break;
            case 3:
                map = new int[][] {
                        {0, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 5, 0, 5, 5, 10, 10, 10, 10, 5, 10, 5, 10, 10, 10},
                        {10, 10, 5, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 5, 0, 5, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 10, 0, 5, 5, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 0, 5, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 10, 10, 10, 5, 5, 0, 10, 5, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 5, 5, 10, 10, 0, 10, 10, 5, 10},
                        {10, 10, 5, 10, 10, 10, 10, 10, 10, 5, 10, 0, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 5, 0, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 8}
                };
                coords = new int[][] {
                        {0,2},
                        {2,0},
                        {4,3},
                        {7,0},
                        {2,4},
                        {0,6},
                        {0,9},
                        {2,7},
                        {5,8},
                        {5,5},
                        {2,9},
                        {7,4},
                        {8,7},
                        {9,9},
                        {9,4}
                };
                break;
            case 4:
                map = new int[][] {
                        {2, 5, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 5, 0, 5, 5, 10, 10, 10, 5, 5, 10, 5, 10, 10, 10},
                        {10, 10, 5, 0, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5},
                        {10, 5, 5, 10, 0, 5, 10, 5, 10, 10, 10, 10, 10, 10, 10},
                        {5, 10, 10, 10, 5, 0, 5, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 5, 5, 10, 0, 5, 5, 5, 10, 10, 10, 10},
                        {10, 10, 5, 10, 10, 10, 10, 5, 0, 5, 10, 5, 10, 5, 10},
                        {10, 10, 5, 10, 10, 10, 10, 5, 5, 0, 10, 5, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 5, 5, 10, 10, 0, 10, 10, 5, 10},
                        {10, 10, 5, 5, 10, 10, 10, 10, 5, 5, 10, 0, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 8, 5, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 5, 10, 5, 0, 5},
                        {10, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 5, 5, 0}
                };
                coords = new int[][] {
                        {0,2},
                        {2,0},
                        {4,3},
                        {7,0},
                        {2,4},
                        {0,6},
                        {0,9},
                        {2,7},
                        {5,8},
                        {5,5},
                        {2,9},
                        {7,4},
                        {8,7},
                        {9,9},
                        {9,4}
                };
                break;
            case 5:
                map = new int[][] {
                        {0, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 5, 0, 5, 5, 10, 10, 10, 10, 10, 10, 5, 10, 10, 10},
                        {10, 10, 5, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 0, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 5, 0, 5, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 0, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 10, 0, 5, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 0, 5, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 5, 0, 10, 10, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0, 10, 10, 5, 10},
                        {10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 0, 10, 10, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 5, 8, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 0}
                };
                coords = new int[][] {
                        {0,2},
                        {2,0},
                        {4,3},
                        {7,0},
                        {2,4},
                        {0,6},
                        {0,9},
                        {2,7},
                        {5,8},
                        {5,5},
                        {2,9},
                        {7,4},
                        {8,7},
                        {9,9},
                        {9,4}
                };
                break;
            case 6:
                map = new int[][] {
                        {2, 5, 10, 10, 5, 10, 10},
                        {5, 0, 5, 10, 10, 10, 10},
                        {10, 5, 0, 5, 10, 10, 10},
                        {10, 10, 5, 8, 10, 10, 5},
                        {5, 10, 10, 10, 0, 5, 10},
                        {10, 10, 10, 10, 5, 0, 5},
                        {10, 10, 10, 5, 10, 5, 0}
                };
                coords = new int[][] {
                        {0,0},
                        {5,3},
                        {8,5},
                        {9,9},
                        {2,5},
                        {4,7},
                        {6,8}
                };
                break;
            case 7:
                map = new int[][] {
                        {0, 5, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 10, 10, 10},
                        {10, 5, 2, 5, 10, 10, 10},
                        {10, 10, 5, 0, 10, 10, 5},
                        {10, 10, 10, 10, 8, 10, 10},
                        {10, 10, 10, 10, 10, 0, 5},
                        {10, 10, 10, 5, 10, 5, 0}
                };
                coords = new int[][] {
                        {0,0},
                        {5,3},
                        {8,5},
                        {9,9},
                        {2,5},
                        {4,7},
                        {6,8}
                };
                break;
            case 8:
                map = new int[][] {
                        {0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 8, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 5, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 10, 10, 10, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 5, 10, 10, 5, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 10, 5, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10},
                        {10, 10, 10, 5, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 5, 10, 10, 10, 0, 5, 10, 10, 5, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 5, 10, 10, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 5, 10, 10, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 10, 10, 10, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 10, 0, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 2, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0}
                };
                coords = new int[][] {
                        {0,0},
                        {3,0},
                        {6,0},
                        {9,0},
                        {0,3},
                        {3,3},
                        {6,3},
                        {9,3},
                        {0,6},
                        {3,6},
                        {6,6},
                        {9,6},
                        {0,9},
                        {3,9},
                        {6,9},
                        {9,9}
                };
                break;
            case 9:
                map = new int[][] {
                        {0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 5, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10, 10},
                        {5, 10, 10, 10, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10, 10, 10},
                        {10, 5, 10, 10, 5, 0, 10, 10, 10, 5, 10, 10, 10, 10, 10, 10},
                        {10, 10, 5, 10, 10, 10, 0, 5, 10, 10, 5, 10, 10, 10, 10, 10},
                        {10, 10, 10, 5, 10, 10, 5, 2, 10, 10, 10, 5, 10, 10, 10, 10},
                        {10, 10, 10, 10, 5, 10, 10, 10, 0, 5, 10, 10, 5, 10, 10, 10},
                        {10, 10, 10, 10, 10, 5, 10, 10, 5, 8, 10, 10, 10, 10, 10, 10},
                        {10, 10, 10, 10, 10, 10, 5, 10, 10, 10, 0, 5, 10, 10, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 10, 10, 10, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 10, 0, 5, 10, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 0, 5, 10},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0, 5},
                        {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 10, 10, 5, 0}
                };
                coords = new int[][] {
                        {0,0},
                        {3,0},
                        {6,0},
                        {9,0},
                        {0,3},
                        {3,3},
                        {6,3},
                        {9,3},
                        {0,6},
                        {3,6},
                        {6,6},
                        {9,6},
                        {0,9},
                        {3,9},
                        {6,9},
                        {9,9}
                };
                break;
            default:
                System.out.println("Map cannot be found. Please try another number.");
                System.exit(1);
        }
        distances = new double[map.length][map[0].length];
        buildDistanceMatrix();
    }

    public int getStart() {
        for (int i = 0; i < map.length; i++) {
            for (int j = 0; j < map[0].length; j++) {
                if (map[i][j] == 2) {
                    return i;
                }
            }
        }

        return 0;
    }

    public int getGoal() {
        for (int i = 0; i < map.length; i++) {
            for (int j = 0; j < map[0].length; j++) {
                if (map[i][j] == 8) {
                    return i;
                }
            }
        }

        return 0;
    }

    public ArrayList getConnected(int point) {
        ArrayList connected = new ArrayList();

        for (int i = 0; i < map[point].length; i++) {
            if (map[point][i] == 5) {
                connected.add(i);
            }
        }

        return connected;
    }

    public double calculateDistance(int n, int m) {
        int xDiff = coords[n][0] - coords[m][0];
        int yDiff = coords[n][1] - coords[m][1];
        double dist = Math.sqrt(xDiff*xDiff + yDiff*yDiff);
        return dist;
    }

    public void buildDistanceMatrix() {
        for (int i = 0; i < map.length; i++) {
            ArrayList<Integer> connected = getConnected(i);
            for (int j = 0; j < connected.size(); j++) {
                int inspected = connected.get(j);
                distances[i][inspected] = calculateDistance(i, inspected);
            }
        }
    }

    public double[][] getDistances() {
        return distances;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("\t");

        for (int i = 0; i < map.length; i++) {
            sb.append(points[i]);
            sb.append("\t");
        }

        sb.append("\n");

        for (int i = 0; i < map.length; i++) {
            sb.append(points[i]);
            sb.append("\t");
            for (int j = 0; j < map[0].length; j++) {
                sb.append(map[i][j]);
                sb.append("\t");
            }
            sb.append("\n");
        }

        return sb.toString();
    }
}
